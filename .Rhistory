load("/media/joebrew/JB/fdoh/private/ben/screen.RData")
rm(lms, lms1, lms2,
screen07, screen08, screen09,
screen10, screen11, screen12,
screen13, i, delFun)
load("/media/joebrew/JB/fdoh/private/ben/flu.RData")
head(dat)
head(screen)
screen$id <- screen$PersonID
head(screen)
str(screen$Health_Screening_Date)
screen$date <- as.Date(screen$Health_Screening_Date, format = "%Y-%m-%d")
hist(screen$date, breaks = 100)
screen <- screen[which(screen$date >= "2011-08-01"),]
hist(as.numeric(format(screen$date, format = "%j")))
screen <- screen[which(as.numeric(format(screen$date, format = "%j")) > 200),]
dat$year
screen$year <- as.numeric(format(screen$date, format = "%Y"))
table(screen$year)
table
table(screen$year)
x <- merge(x = screen,
y = dat,
all.x = TRUE,
all.y = FALSE,
by = c("id", "year"))
head(x)
load("/media/joebrew/JB/fdoh/private/ben/screen.RData")
rm(lms, lms1, lms2,
screen07, screen08, screen09,
screen10, screen11, screen12,
screen13, i, delFun)
# Get id
screen$id <- screen$PersonID
# Remove prior to 2011
screen$date <- as.Date(screen$Health_Screening_Date, format = "%Y-%m-%d")
screen <- screen[which(screen$date >= "2011-08-01"),]
# Remove spring screenings
hist(as.numeric(format(screen$date, format = "%j")))
screen <- screen[which(as.numeric(format(screen$date, format = "%j")) > 200),]
# Add year column
screen$year <- as.numeric(format(screen$date, format = "%Y"))
flu <- read.csv("/media/joebrew/JB/fdoh/private/ben/dat.csv")
head(flu)
head(screen)
x <- merge(x = screen,
y = dat,
all.x = TRUE,
all.y = FALSE,
by = c("personID", "year"))
x <- merge(x = screen,
y = flu,
all.x = TRUE,
all.y = FALSE,
by = c("personID", "year"))
dat$personID
flu$personID
screen$personID
screen$personID <- screen$PersonID
x <- merge(x = screen,
y = flu,
all.x = TRUE,
all.y = FALSE,
by = c("personID", "year"))
head(x)
library(plyr)
?join
x <- join(x = screen,
y = flu,
type = "left",
match = "first",
by = c("personID", "year"))
head(x)
table(is.na(x$dob))
library(dplyr)
install.packages("dplyr")
library(dplyr)
version()
Version()
session()
Session.info()
?session.info
install.packages("dplyr")
update.packages()
library(plyr)
library(dplyr)
install.packages("dplyr")
install.packages("randomForest")
install.packages(dplyr)
install.packages("dplyr")
library(devtools)
install_github("hadley/dplyr")
library(dplyr)
library(dplyr)
install.packages("dplyr")
# Load obesity data
load("/media/joebrew/JB/fdoh/private/ben/screen.RData")
rm(lms, lms1, lms2,
screen07, screen08, screen09,
screen10, screen11, screen12,
screen13, i, delFun)
# Get id
screen$personID <- screen$PersonID
# Remove prior to 2011
screen$date <- as.Date(screen$Health_Screening_Date, format = "%Y-%m-%d")
screen <- screen[which(screen$date >= "2011-08-01"),]
# Remove spring screenings
hist(as.numeric(format(screen$date, format = "%j")))
screen <- screen[which(as.numeric(format(screen$date, format = "%j")) > 200),]
# Add year column
screen$year <- as.numeric(format(screen$date, format = "%Y"))
# Load flu data
flu <- read.csv("/media/joebrew/JB/fdoh/private/ben/dat.csv")
# join by id
library(plyr)
x <- join(x = screen,
y = flu,
type = "left",
match = "first",
by = c("personID", "year"))
# clean up
library(dplyr)
x <- join(x = screen,
library(plyr)
library(plyr)
install.packages("plyr")
# Load obesity data
load("/media/joebrew/JB/fdoh/private/ben/screen.RData")
rm(lms, lms1, lms2,
screen07, screen08, screen09,
screen10, screen11, screen12,
screen13, i, delFun)
# Get id
screen$personID <- screen$PersonID
# Remove prior to 2011
screen$date <- as.Date(screen$Health_Screening_Date, format = "%Y-%m-%d")
screen <- screen[which(screen$date >= "2011-08-01"),]
# Remove spring screenings
hist(as.numeric(format(screen$date, format = "%j")))
screen <- screen[which(as.numeric(format(screen$date, format = "%j")) > 200),]
# Add year column
screen$year <- as.numeric(format(screen$date, format = "%Y"))
# Load flu data
flu <- read.csv("/media/joebrew/JB/fdoh/private/ben/dat.csv")
# join by id
library(plyr)
x <- join(x = screen,
y = flu,
type = "left",
match = "first",
by = c("personID", "year"))
# clean up
library(dplyr)
names(x)
head(x)
y <- x %>%
select(personID)
y <- x %>%
select(year)
y <- x[,c("year", "School_Name", "Grade", "Race", "Gender",
"Age_Years", "Age_Months", "Growth_Height", "Growth_Weight", "Lunch_Status",
"bmi", "Z", "cat", "catbi", "cf", "lunchbi", "lunch", "racebi", "race", "teacher")]
y <- x[,c("year", "School_Name", "Grade", "Race", "Gender",
"Age_Years", "Age_Months", "Growth_Height", "Growth_Weight", "Lunch_Status",
"bmi", "Z", "cat", "catbi", "cf", "lunchbi", "lunch", "racebi",
"race", "teacher", "intern")]
nrow(y[which(is.na(y$intern)),])
y <- y[which(!is.na(y$intern)),]
head(y)
row.names(y)
row.names(y) <- NULL
head(y)
y$intern <- NULL
table(y$Race == y$race)
y$Race <- NULL
y$Lunch_Status <- NULL
table(y$Race == y$race)
head(y)
table(y$racebi)
getwd()
write.csv(y, "/media/joebrew/JB/fdoh/private/ben/health_data.csv")
library(rgdal)
install.packages("rgdal")
install.packages("rgdal")
shiny::runApp('fakepaper')
shiny::runApp('fakepaper')
library(shinyapps)
shinyapps::setAccountInfo(
name="joebrew",
token="C4D0E22C484D74139A50EDE2BA1887F4",
secret="zbbeauXf53w0Qnpxcx1RREIdIUJAaRaVjZLcN/Id")
##################
setwd("/home/joebrew/Documents/fakepaper")
runApp()
?deployApp
deployApp(appName = "letterator")
deployApp(appName = "letterator")
